{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVOwAAAAAAAACMIXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5wb2xpY2llc5SMEUFjdG9yQ3JpdGljUG9saWN5lJOULg==",
        "__module__": "stable_baselines3.common.policies",
        "__doc__": "\n    Policy class for actor-critic algorithms (has both policy and value prediction).\n    Used by A2C, PPO and the likes.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param ortho_init: Whether to use or not orthogonal initialization\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param full_std: Whether to use (n_features x n_actions) parameters\n        for the std instead of only (n_features,) when using gSDE\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param squash_output: Whether to squash the output using a tanh function,\n        this allows to ensure boundaries when using gSDE.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param share_features_extractor: If True, the features extractor is shared between the policy and value networks.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function ActorCriticPolicy.__init__ at 0x7fe29de39040>",
        "_get_constructor_parameters": "<function ActorCriticPolicy._get_constructor_parameters at 0x7fe29de390d0>",
        "reset_noise": "<function ActorCriticPolicy.reset_noise at 0x7fe29de39160>",
        "_build_mlp_extractor": "<function ActorCriticPolicy._build_mlp_extractor at 0x7fe29de391f0>",
        "_build": "<function ActorCriticPolicy._build at 0x7fe29de39280>",
        "forward": "<function ActorCriticPolicy.forward at 0x7fe29de39310>",
        "extract_features": "<function ActorCriticPolicy.extract_features at 0x7fe29de393a0>",
        "_get_action_dist_from_latent": "<function ActorCriticPolicy._get_action_dist_from_latent at 0x7fe29de39430>",
        "_predict": "<function ActorCriticPolicy._predict at 0x7fe29de394c0>",
        "evaluate_actions": "<function ActorCriticPolicy.evaluate_actions at 0x7fe29de39550>",
        "get_distribution": "<function ActorCriticPolicy.get_distribution at 0x7fe29de395e0>",
        "predict_values": "<function ActorCriticPolicy.predict_values at 0x7fe29de39670>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc_data object at 0x7fe29de35120>"
    },
    "verbose": 1,
    "policy_kwargs": {
        "net_arch": {
            "pi": [
                16,
                16
            ],
            "vf": [
                256,
                256
            ]
        }
    },
    "num_timesteps": 1500,
    "_total_timesteps": 15000,
    "_num_timesteps_at_start": 0,
    "seed": 0,
    "action_noise": null,
    "start_time": 1699723987844356762,
    "learning_rate": 0.0003,
    "tensorboard_log": null,
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWV1wAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJZgAAAAAAAAAAAAAMCgAq8/AAAAYH+m7D8AAAAAAAAAAAAAAAB5Q8M/AAAAIM+8+D8AAAAAAADwPwAAACDkjLU/AAAAQDNA5D8AAAAAAAAAAAAAAOAvVsM/AAAAoLCP+D8AAAAAAADwP5SMBW51bXB5lIwFZHR5cGWUk5SMAmY4lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGJLAUsESwOHlIwBQ5R0lFKULg=="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAACUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": null,
    "_episode_num": 0,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.45386666666666664,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVNgEAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKUKH2UKIwBcpRHQACO+IuXeFeMAWyUS5GMAXSUR0A0/+IuXeFddX2UKGgGR0BBx3kxREWqaAdL5mgIR0BE7N6gM+eOdX2UKGgGR0AR/np0OmSAaAdLlWgIR0BMQCUgSvkjdX2UKGgGR0AUTurp7kXDaAdLkWgIR0BRnlanrIHUdX2UKGgGR0AZUALiMo+faAdLjmgIR0BVE4XsPatcdX2UKGgGR0Ab91+y7f52aAdLlWgIR0BYrx37k4m1dX2UKGgGR0A2R8La24NJaAdLzWgIR0BdhmX1J17qdX2UKGgGR0AeefxtpEhJaAdLmWgIR0Bgo2mm+CbudX2UKGgGR0Al3p6hQFcIaAdLlmgIR0Bidser+5vtdWUu"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 40,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWV8AIAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lGgFk5SMAmY4lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWDAAAAAAAAAABAQEBAQEBAQEBAQGUaAeMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLBEsDhpSMAUOUdJRSlIwNYm91bmRlZF9hYm92ZZRoECiWDAAAAAAAAAABAQEBAQEBAQEBAQGUaBRLBEsDhpRoGHSUUpSMBl9zaGFwZZRLBEsDhpSMA2xvd5RoECiWYAAAAAAAAAAfhetRuB4JwAAAAAAAAAAAAAAAAAAAAAAfhetRuB4JwAAAAAAAAAAAAAAAAAAAAAAfhetRuB4JwAAAAAAAAAAAAAAAAAAAAAAfhetRuB4JwAAAAAAAAAAAAAAAAAAAAACUaApLBEsDhpRoGHSUUpSMBGhpZ2iUaBAolmAAAAAAAAAAH4XrUbgeCUAAAAAAAAAAQAAAAAAAAPA/H4XrUbgeCUAAAAAAAAAAQAAAAAAAAPA/H4XrUbgeCUAAAAAAAAAAQAAAAAAAAPA/H4XrUbgeCUAAAAAAAAAAQAAAAAAAAPA/lGgKSwRLA4aUaBh0lFKUjAhsb3dfcmVwcpSMVFtbLTMuMTQgIDAuICAgIDAuICBdCiBbLTMuMTQgIDAuICAgIDAuICBdCiBbLTMuMTQgIDAuICAgIDAuICBdCiBbLTMuMTQgIDAuICAgIDAuICBdXZSMCWhpZ2hfcmVwcpSMSFtbMy4xNCAyLiAgIDEuICBdCiBbMy4xNCAyLiAgIDEuICBdCiBbMy4xNCAyLiAgIDEuICBdCiBbMy4xNCAyLiAgIDEuICBdXZSMCl9ucF9yYW5kb22UTnViLg==",
        "dtype": "float64",
        "bounded_below": "[[ True  True  True]\n [ True  True  True]\n [ True  True  True]\n [ True  True  True]]",
        "bounded_above": "[[ True  True  True]\n [ True  True  True]\n [ True  True  True]\n [ True  True  True]]",
        "_shape": [
            4,
            3
        ],
        "low": "[[-3.14  0.    0.  ]\n [-3.14  0.    0.  ]\n [-3.14  0.    0.  ]\n [-3.14  0.    0.  ]]",
        "high": "[[3.14 2.   1.  ]\n [3.14 2.   1.  ]\n [3.14 2.   1.  ]\n [3.14 2.   1.  ]]",
        "low_repr": "[[-3.14  0.    0.  ]\n [-3.14  0.    0.  ]\n [-3.14  0.    0.  ]\n [-3.14  0.    0.  ]]",
        "high_repr": "[[3.14 2.   1.  ]\n [3.14 2.   1.  ]\n [3.14 2.   1.  ]\n [3.14 2.   1.  ]]",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.discrete.Discrete'>",
        ":serialized:": "gAWVugEAAAAAAACMGWd5bW5hc2l1bS5zcGFjZXMuZGlzY3JldGWUjAhEaXNjcmV0ZZSTlCmBlH2UKIwBbpSMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCaTiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYkMIAgAAAAAAAACUhpRSlIwFc3RhcnSUaAhoDkMIAAAAAAAAAACUhpRSlIwGX3NoYXBllCloCmgLjAJpOJSJiIeUUpQoSwNoD05OTkr/////Sv////9LAHSUYowKX25wX3JhbmRvbZSMFG51bXB5LnJhbmRvbS5fcGlja2xllIwQX19nZW5lcmF0b3JfY3RvcpSTlIwFUENHNjSUaB6MFF9fYml0X2dlbmVyYXRvcl9jdG9ylJOUhpRSlH2UKIwNYml0X2dlbmVyYXRvcpSMBVBDRzY0lIwFc3RhdGWUfZQoaCmKEONhlaa3XlgJLUWWWTS1oRqMA2luY5SKEKlzeES8M4FYghr3OtvajUF1jApoYXNfdWludDMylEsAjAh1aW50ZWdlcpRLAHVidWIu",
        "n": "2",
        "start": "0",
        "_shape": [],
        "dtype": "int64",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "n_steps": 2048,
    "gamma": 0.99,
    "gae_lambda": 0.95,
    "ent_coef": 0.0,
    "vf_coef": 0.5,
    "max_grad_norm": 0.5,
    "batch_size": 64,
    "n_epochs": 10,
    "clip_range": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV5AIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwSIAFMAlE6FlCmMAV+UhZSMZy9ob21lL2thdGhha29saS9taW5pY29uZGEzL2VudnMvY2FybGFFbnYyL2xpYi9weXRob24zLjgvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUjARmdW5jlEuDQwIAAZSMA3ZhbJSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UjGcvaG9tZS9rYXRoYWtvbGkvbWluaWNvbmRhMy9lbnZzL2NhcmxhRW52Mi9saWIvcHl0aG9uMy44L3NpdGUtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lHVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgffZR9lChoFmgNjAxfX3F1YWxuYW1lX1+UjBljb25zdGFudF9mbi48bG9jYWxzPi5mdW5jlIwPX19hbm5vdGF0aW9uc19flH2UjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoF4wHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlEc/yZmZmZmZmoWUUpSFlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg=="
    },
    "clip_range_vf": null,
    "normalize_advantage": true,
    "target_kl": null,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV5AIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwSIAFMAlE6FlCmMAV+UhZSMZy9ob21lL2thdGhha29saS9taW5pY29uZGEzL2VudnMvY2FybGFFbnYyL2xpYi9weXRob24zLjgvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUjARmdW5jlEuDQwIAAZSMA3ZhbJSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UjGcvaG9tZS9rYXRoYWtvbGkvbWluaWNvbmRhMy9lbnZzL2NhcmxhRW52Mi9saWIvcHl0aG9uMy44L3NpdGUtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lHVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgffZR9lChoFmgNjAxfX3F1YWxuYW1lX1+UjBljb25zdGFudF9mbi48bG9jYWxzPi5mdW5jlIwPX19hbm5vdGF0aW9uc19flH2UjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoF4wHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlEc/M6kqMFUyYYWUUpSFlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg=="
    }
}